//===== rAthena Script =======================================
//= Euphy's Quest Shop
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.6c
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= A dynamic quest shop based on Lunar's, with easier config.
//= Includes support for multiple shops & cashpoints.
//= Item Preview script by ToastOfDoom.
//===== Additional Comments: =================================
//= 1.0 Initial script.
//= 1.2 Added category support.
//= 1.3 More options and fixes.
//= 1.4 Added debug settings.
//= 1.5 Replaced categories with shop IDs.
//= 1.6 Added support for purchasing stackables.
//= 1.6a Added support for previewing costumes and robes.
//= 1.6b Added 'disable_items' command.
//= 1.6c Replaced function 'A_An' with "F_InsertArticle".
//= 1.7 Modified by j
//= 1.7a Removed some lines of code
//==============================================

izlude,127,168,4	script	Sindri#1	-1,{
	doevent "trig_craft::OnMenu";
	
	OnInit:
		callfunc("customizeNPCSprite", JOB_MEISTER, SEX_MALE, 6, 27, 1760, 1715, 1920, 7);
		end;
}

	// Core code
-	script	trig_craft	-1,{
	function Add;
	function Chk;
	function Slot;

	OnInit:
		set .Announce,1;	// Announce quest completion? (1: yes / 0: no)
		set .ShowSlot,2;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
		set .ShowID,1;  	// Show item IDs? (1: yes / 0: no)
		set .ShowZeny,0;	// Show Zeny cost, if any? (1: yes / 0: no)
		set .MaxStack,1;	// Max number of quest items purchased at one time.

		// When adding new shop options go to the bottom of this file and follow the format.
		setarray .Shops$[1],
		"Headgears",	// Shop Named 1
		"Weapons";		// Shop Named 2

		// Go to the bottom of the code to add the items
		callsub ItemList;

		set .menu$,"";
		//.@shopCount = indicate where where to start reading the array
		for(.@shopCount = 1; .@shopCount <= getarraysize(.Shops$); .@shopCount++) {
			//set .menu = create a window
			//.menu$+.Shops$[.@shopCount] = display the Shops (Headgear, Weapon, Others) inside the created window
			set .menu$, .menu$+.Shops$[.@shopCount]+":";
			//By default there's placeholder (jellopy) inside the shop to be able to call it, see the bottom of this code.
			//This code deletes the jellopy
			npcshopdelitem "craft"+.@shopCount,909;
		}
		end;

	OnMenu:
		mes "[Sindri]";
		mes "Welcome!";
		mes "Enter, seeker of power. Togerther, we forge legends";
		next;
		//This part of code is responsible for the arrangement of items inside the shop
		set .@size, getarraysize(@itemCount);
		if (!.@size){
			set @shop_index, select(.menu$);
		} else {
			message strcharinfo(0),"An error has occurred.";
			end;
		}
		
		mes "[Sindri]";
		mes "Step forward, seeker of power, as I wield the flames that shapes the unrivavled strength you crave.";
		close2;
		dispbottom "Select one item at a time.";
		//Display the list of items in the Shop
		callshop "craft"+@shop_index,1;
		//Responsible for displaying and getting the required items
		npcshopattach "craft"+@shop_index;
		end;

	OnBuyItem:
		// .@q[] : RewardID, BoughtAmt, RewardAmt, BaseAmt, ReqZeny, ReqPts, { ReqItem, ReqAmt, ... }
		// Checks and copy the requiments
		setarray .@requiredItem[0],@bought_nameid[0],((@bought_quantity[0] > .MaxStack) ? .MaxStack : @bought_quantity[0]);
	 	copyarray .@requiredItem[3],getd(".q_"+@shop_index+"_"+.@requiredItem[0]+"[0]"),getarraysize(getd(".q_"+@shop_index+"_"+.@requiredItem[0]));
		//Number of selected items

		set .@requiredItem[2],.@requiredItem[1];
		// Display this error when player craft an item greater than the maximum storage limit
		if (!.@requiredItem[2] || .@requiredItem[2] > 30000) {
			message strcharinfo(0),"You can't purchase that many "+getitemname(.@requiredItem[0])+".";
			end;
		}
		mes "[Sindri]";
		// Display Selected item
		mes "Selected Item: ^0055FF" + Slot(.@requiredItem[0]) + "^000000";
		mes "Requirements:";
		//Display Requirements
		if (.@requiredItem[4]){
			mes " > Zeny: "+Chk(Zeny, .@requiredItem[4] * .@requiredItem[1])+(.@requiredItem[4] * .@requiredItem[1]);
		}
		if (.@requiredItem[5]){
			for(.@reqList = 5; .@reqList < getarraysize(.@requiredItem); .@reqList += 2){
				mes " > ^000000"
				+Slot(.@requiredItem[.@reqList])+"^000000"	//Item Name
				+((.ShowID)?" : [ ^0055FF "+.@requiredItem[.@reqList]+"^000000 ] ":"")	//ItemID
				+" ("+Chk(countitem(.@requiredItem[.@reqList]),.@requiredItem[.@reqList+1]*.@requiredItem[1])+countitem(.@requiredItem[.@reqList]) // Item you have
				+"/"
				+(.@requiredItem[.@reqList+1]*.@requiredItem[1])+")^000000";	//Item Required
			}
		}
		next;
		while(1) {
			// Create a navi buttons (purchase, cancel)
			switch(select(" ~ Purchase ^0055FF"+getitemname(.@requiredItem[0])+": ~ ^777777Cancel^000000")) {
			case 1:
				// Check if the items required are incomplete
				if (@reqCheck[0]) {
					mes "[Sindri]";
					mes "You're missing one or more quest requirements.";
					close;
				}
				// Display when the player overweight
				if (!checkweight(.@requiredItem[0],.@requiredItem[2])) {
					mes "[Sindri]";
					mes "^FF0000You need "+(((.@requiredItem[2]*getiteminfo(.@requiredItem[0], ITEMINFO_WEIGHT))+Weight-MaxWeight)/10)+
					" additional weight capacity to complete this trade.^000000";
					close;
				}
				// If the item required is complete
				if (.@requiredItem[4]){
					set Zeny, Zeny-(.@requiredItem[4]*.@requiredItem[1]);
				}
				if (.@requiredItem[5]){
					for(.@numReq = 5; .@numReq < getarraysize(.@requiredItem); .@numReq += 2){
						// Delete the required items
						delitem .@requiredItem[.@numReq],.@requiredItem[.@numReq+1]*.@requiredItem[1];
					}
					// Player gets the selected item
					getitem .@requiredItem[0],.@requiredItem[2];
					// Display a message the craft is complete
					if (.Announce){
						announce strcharinfo(0) + " has created " + ((.@requiredItem[2] > 1) ? .@requiredItem[2]+
						"x "+getitemname(.@requiredItem[0]) : callfunc("F_InsertArticle",getitemname(.@requiredItem[0])))+"!",0;
						specialeffect2 EF_FLOWERLEAF;
					}
					close;
				}
				
			case 2:
				close;
			}
		}
	end;

// Adding custom items
function Add {
	// Check if the item ID is valid
	if (getitemname(getarg(1)) == "null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped).";
		return;
	}
	setarray .@itemOtherReqs[0],getarg(2),getarg(3);
	for(.@argCount = 4; .@argCount < getargcount(); .@argCount += 2) {
		// Check if the requirement IDs are valid
		if (getitemname(getarg(.@argCount)) == "null") {
			debugmes "Quest requirement #"+getarg(.@argCount)+" invalid (skipped).";
			return;
		} else
			setarray .@itemOtherReqs[.@argCount-2],getarg(.@argCount),getarg(.@argCount+1);
	}
	copyarray getd(".q_"+getarg(0)+"_"+getarg(1)+"[0]"),.@itemOtherReqs[0],getarraysize(.@itemOtherReqs);
	npcshopadditem "craft"+getarg(0), getarg(1), ((.ShowZeny) ? getarg(3) : 0);
	return;
}

// Change color of Requirement
function Chk {
	if (getarg(0) < getarg(1)) {
		set @reqCheck[0], 1;
		// Color of requirement when incomplete.
		return "^FF0000";
	} else
		// Color of requirement when completed
		return "^008000";
}

// Check item slot
function Slot {
	set .@slotCount$, getitemname(getarg(0));
	switch(.ShowSlot) {
		case 1:
			if (!getitemslots(getarg(0))){
				return .@slotCount$;
			}

		case 2:
			/*
			IT_HEALING = 0	IT_UNKNOWN = 1	IT_USABLE = 2	IT_ETC = 3	IT_ARMOR = 4	IT_WEAPON = 5		IT_CARD = 6		IT_PETEGG = 7
			IT_PETARMOR = 8	IT_UNKNOWN2 = 9	IT_AMMO = 10	IT_DELAYCONSUME = 11		IT_SHADOWGEAR = 12	IT_CASH = 18	IT_MAX = N/A
			*/
			if (getiteminfo(getarg(0), ITEMINFO_TYPE) == IT_ARMOR || getiteminfo(getarg(0), ITEMINFO_TYPE) == IT_WEAPON){
				return .@slotCount$+" ["+getitemslots(getarg(0))+"]";
			}

		default:
			return .@slotCount$;
	}
}

ItemList:
	//==============================
	// ADD THE CRAFTABLE ITEMS HERE 
	//==============================
	// Warning: Do not add dupplicated item ID or IT WILL NOT WORK!
	// Syntax: Add(<shop ID>,<reward ID>,<reward amount>,<Zeny cost>,<required item ID>,<required item amount>{,...});

	// Shop 1
	Add(1,5389,1,999,2226,1,984,10,985,40,4081,1,732,2);

	// Shop 2
	Add(2,1599,1,0,7086,1,969,10,999,40,1003,50,984,2);
	Add(2,1208,1,0,909,1);

	return;
 }
//=========
// WARNING
//=========
// The following shop holds the UI of declared ".Shops$" name
// Deleting this will break the shop UI
-	shop	craft1	-1,909:-1
-	shop	craft2	-1,909:-1